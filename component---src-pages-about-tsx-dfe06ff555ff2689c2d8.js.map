{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./src/components/seo.tsx"],"names":["About","title","SEO","description","lang","meta","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","author","concat"],"mappings":"6FAAA,wDAsBeA,UAjBD,kBACZ,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKC,MAAM,UACX,6BACE,+CACA,ua,kCCVN,iDAgFeC,IA9DH,SAAC,GAA8C,IAA5CC,EAA4C,EAA5CA,YAAaC,EAA+B,EAA/BA,KAAMC,EAAyB,EAAzBA,KAAMJ,EAAmB,EAAnBA,MAC9BK,EAASC,yBAAe,YAAxBD,KAcFE,EAAkBL,GAAeG,EAAKG,aAAaN,YAEzD,OACE,kBAAC,IAAD,CACEO,eAAgB,CACdN,QAEFH,MAAOA,EACPU,cAAa,QAAUL,EAAKG,aAAaR,MACzCI,KAAM,CACJ,CACEO,KAAM,cACNC,QAASL,GAEX,CACEM,SAAU,WACVD,QAASZ,GAEX,CACEa,SAAU,iBACVD,QAASL,GAEX,CACEM,SAAU,UACVD,QAAS,WAEX,CACED,KAAM,eACNC,QAAS,WAEX,CACED,KAAM,kBACNC,QAASP,EAAKG,aAAaM,QAE7B,CACEH,KAAM,gBACNC,QAASZ,GAEX,CACEW,KAAM,sBACNC,QAASL,IAEXQ,OAAOX,GAAQ","file":"component---src-pages-about-tsx-dfe06ff555ff2689c2d8.js","sourcesContent":["import React from 'react';\n\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\nconst About = () => (\n  <Layout>\n    <SEO title=\"About\" />\n    <div>\n      <h2>About Synthwave</h2>\n      <p>\n        I&#39;m baby cray plaid occupy vape taiyaki. Tbh pour-over trust fund\n        gochujang four loko pop-up brooklyn shabby chic skateboard man braid\n        godard before they sold out. Pitchfork cloud bread slow-carb edison bulb\n        sriracha godard, yr synth typewriter swag everyday carry austin four\n        dollar toast. Gochujang meditation air plant iPhone, ugh banjo\n        letterpress williamsburg 3 wolf moon next level.\n      </p>\n    </div>\n  </Layout>\n);\n\nexport default About;\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react';\nimport Helmet from 'react-helmet';\nimport { useStaticQuery, graphql } from 'gatsby';\n\ninterface Props {\n  description?: string;\n  lang?: string;\n  meta?: [];\n  title: string;\n}\n\nconst SEO = ({ description, lang, meta, title }: Props) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  );\n\n  const metaDescription = description || site.siteMetadata.description;\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta || [])}\n    />\n  );\n};\n\nexport default SEO;\n"],"sourceRoot":""}